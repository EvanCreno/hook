#!/usr/bin/env php
<?php

if (PHP_SAPI !== 'cli') {
  echo 'Warning: dl-api should be invoked via the CLI version of PHP, not the ' . PHP_SAPI.' SAPI' . PHP_EOL;
}

$VERSION = '1.0.0rc1';

require_once __DIR__ . '/../vendor/autoload.php';
Guzzle\Http\StaticClient::mount();

echo "..." . PHP_EOL ;

$cli = new Commando\Command();
$commands = array();

foreach(glob(__DIR__ . '/../src/commands/*.php') as $file) {
  $command = require($file);
  $commands[ $command['arg0'] ] = $command;

  $cli->argument()
    ->referToAs($command['command'])
    ->describedAs($command['description']);
}

$cli->option('app')
  ->describedAs('Application name');

$cli->option('version')
  ->describedAs('Show CLI version.')
  ->boolean();

$cli->option('json')
  ->describedAs('JSON output. Useful to automate/integrate CLI workflow.')
  ->boolean();

$cli->option('endpoint')
  ->describedAs('Define host endpoint. Default: '. \Client\Client::getEndpoint());

// set app config manually
if ($cli['app']) {
  $client = new Client\Client();
  $app_data = $client->get('apps/' . $cli['app']);
  Client\Project::setTempConfig(array(
    'app_id' => $app_data->keys[0]->app_id,
    'key' => $app_data->keys[0]->key
  ));
}

// show cli version
if ($cli['version']) {
  die("dl-api: v" . $VERSION . PHP_EOL);
}

if ($cli['endpoint']) {
  \Client\Client::setEndpoint($cli['endpoint']);
}

if (isset($cli[0])) {
  if (isset($commands[$cli[0]])) {
    $command = $commands[$cli[0]];
    $data = $command['run']($cli);

    // Print JSON when requested
    if ($data && $cli['json']) {
      echo json_encode($data, JSON_PRETTY_PRINT) . PHP_EOL;
    }

  } else {
    $cli->printHelp();
    echo "Command '{$cli[0]}' not found." . PHP_EOL;
  }
}
